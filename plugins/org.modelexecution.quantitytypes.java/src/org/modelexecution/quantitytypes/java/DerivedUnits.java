package org.modelexecution.quantitytypes.java;

public enum DerivedUnits {
	Gray,
	GrayPerSecond,
	Becquerel,
	MolePerCubicMeter,
	MolePerKilogram,
	RadianPerSecondSquared,
	KilogramMeterSquared,
	JouleSecond,
	RadianPerSecond,
	SquareMeter,
	SquareMeterSteradian,
	SquareMeterKelvin,
	SquareMeterPerKelvin,
	Farad,
	Katal,
	WattPerSquareMeterKelvin,
	KilogramPerCubicMeter,
	Sievert,
	PascalSecond,
	Coulomb,
	CoulombPerMeter,
	CoulombPerCubicMeter,
	CoulombPerMole,
	AmperePerSquareMeter,
	AmperePerRadian,
	CoulombMeter,
	VoltPerMeter,
	CoulombPerSquareMeter,
	Siemens,
	Volt,
	JoulePerCubicMeter,
	Joule,
	JoulePerSquareMeter,
	CoulombPerKilogram,
	Newton,
	NewtonPerCoulomb,
	NewtonPerMeter,
	Hertz,
	CubicMeterPerKilogramSecondSquared,
	JoulePerKelvin,
	Lux,
	Henry,
	PerMole,
	MeterPerFarad,
	SquareMeterPerSecond,
	MeterKilogram,
	MeterKelvin,
	MeterPerSecondSquared,
	KilogramMeterPerSecond,
	MeterPerKelvin,
	MeterPerSecond,
	CandelaPerSquareMeter,
	Lumen,
	JoulePerTesla,
	AmpereTurnPerMeter,
	Weber,
	Tesla,
	AmpereTurn,
	KilogramKelvin,
	KilogramPerSecond,
	KilogramPerSquareMeter,
	KilogramPerMeter,
	JoulePerMole,
	JoulePerMoleKelvin,
	HenryPerMeter,
	FaradPerMeter,
	Watt,
	WattPerSteradian,
	WattPerSquareMeterSteradian,
	WattPerSquareMeter,
	Pascal,
	Ohm,
	Steradian,
	JoulePerKilogram,
	JoulePerKilogramKelvin,
	JoulePerKilogramKelvinPerPascal,
	JoulePerKilogramKelvinPerCubicMeter,
	MoleKelvin,
	WattPerMeterKelvin,
	SquareMeterKelvinPerWatt,
	KelvinPerWatt,
	MeterKelvinPerWatt,
	NewtonPerKilogram,
	SecondTimeSquared,
	NewtonMeter,
	CubicMeter,
	CubicMeterPerKelvin,
	CubicMeterPerSecond,
	JoulePerCubicMeterKelvin,
	BitsPerSecond
}
